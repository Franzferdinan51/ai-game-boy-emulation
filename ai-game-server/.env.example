# AI Game System - Environment Variables Example
# Copy this file to .env and replace with your actual API keys

# ========== AI API Keys ==========
# Get these from the respective AI providers

# Google Gemini API (Free tier available)
# Get API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# OpenRouter API (Paid)
# Get API key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# NVIDIA NIM API (Paid)
# Get API key from: https://build.nvidia.com/
NVIDIA_API_KEY=your_nvidia_api_key_here
NVIDIA_MODEL=nvidia/llama3-llm-70b

# OpenAI Compatible API (Custom endpoints)
# For OpenAI: https://platform.openai.com/api-keys
# For LM Studio: use http://localhost:1234/v1
# For Ollama: use http://localhost:11434/v1
# For other compatible APIs: use their endpoint
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_ENDPOINT=https://api.openai.com/v1
OPENAI_MODEL=gpt-4o

# Local AI Provider Settings
# LM Studio default endpoint
LM_STUDIO_URL=http://localhost:1234/v1
LM_STUDIO_MODEL=local-model

# Ollama default endpoint
OLLAMA_URL=http://localhost:11434/v1
OLLAMA_MODEL=llama3

# General AI settings
AI_TIMEOUT=60
AI_MAX_RETRIES=3
AI_MODEL=local-model

# ========== Server Configuration ==========
# Optional server settings

# Flask Configuration
FLASK_ENV=development
FLASK_DEBUG=true

# Server Ports
BACKEND_PORT=5000
FRONTEND_PORT=5173
MONITOR_PORT=8080

# Logging
LOG_LEVEL=INFO
LOG_FILE=ai_game_server.log

# Performance Settings
AI_REQUEST_TIMEOUT=30
SCREEN_CAPTURE_QUALITY=85
MAX_ROM_SIZE=104857600

# ========== Instructions ==========
# 1. Copy this file to .env
# 2. Replace placeholder values with your actual API keys
# 3. Restart the server
# 4. The AI features will work once API keys are configured

# Note: The system works without API keys, but AI features will be limited
# Actions can still be executed manually through the web interface